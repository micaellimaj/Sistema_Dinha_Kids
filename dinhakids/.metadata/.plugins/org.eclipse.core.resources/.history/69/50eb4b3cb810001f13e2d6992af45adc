import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.dinhakids.dinhakids.models.UserModel;

@RestController
@RequestMapping("/users")
public class UserController {

    @Autowired
    private IUserRepository userRepository;

    @PostMapping("/")
    public ResponseEntity create(@RequestBody UserModel userModel){
        var user = this.userRepository.findByUsername(userModel.getUsername()); //procura se ja existe um username igual ao digitado

        if(user != null){ //se ja tiver um username igual ao digitado, dar치 erro bad request
            System.out.println("Usu치rio existente");
            return ResponseEntity.status(400).body("Usu치rio j치 existe");
        }

        var passwordHashred = BCrypt.withDefaults().hashToString(12,userModel.getSenha().toCharArray()); // encriptador de senha
        userModel.setSenha(passwordHashred);

        var userCreated = this.userRepository.save(userModel); // cria o usuario
        return ResponseEntity.status(HttpStatus.CREATED).body(userCreated);
    }
}
